@model Models.Framework.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="col-12 mt-3">
    <div class="custom-form p-4 border rounded">
        @*<img src=""
            class="img-fluid avatar avatar-medium d-block mx-auto rounded-pill" alt="">*@
        <form class="text-success mb-0 rounded">
            <h3 class="text-center">EDIT USER</h3>
        </form>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID_User)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.GroupID, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ActivationCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ActivationCode, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ResetPasswordCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ResetPasswordCode, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.isEmailVerify, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.isEmailVerify, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @disabled = "disabled" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Introduce, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Introduce, "", new { @class = "text-danger", @disabled = "disabled" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.isFreeLancer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isFreeLancer)
                    @Html.ValidationMessageFor(model => model.isFreeLancer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isEmployer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isEmployer)
                    @Html.ValidationMessageFor(model => model.isEmployer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Skill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Skill, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Educate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Educate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Educate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpertTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpertTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpertTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalaryUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalaryUser, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Exper, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Exper, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@
        <div class="col-lg-12 mt-2">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
        }

        <div class="col-lg-12 mt-2">
            @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-primary " })
        </div>

    </div>
</div>

